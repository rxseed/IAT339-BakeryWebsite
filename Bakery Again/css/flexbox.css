
*, *:after, *:before {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

.box {
	margin-top: 50px;
	margin-bottom:100px;
	display: -webkit-flex; /* For support in a series of Webkit browsers */
	display: -ms-flex; /* For support in IE 10 */
	display: flex; 
	 */
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap; 
	-webkit-align-items: stretch;
	-ms-align-items: stretch;
	align-items: stretch;

}



.box-item-article {
	-webkit-flex-grow: 1;
	-ms-flex-grow: 1;
	flex-grow: 1;

	/*
		'flex-basis' is the initial size of the flex item (sort of 
		a minimum dimension) before any flexbox is applied
	*/
	-webkit-flex-basis: 30em;
	-ms-flex-basis: 30em;
	flex-basis: 30em;
}


.box-item-article-image {
	-webkit-flex-grow: 1;
	-ms-flex-grow: 1;
	flex-grow: 1;
	
	/*
		Because our image is rendered in pixels, it is acceptable
		to use pixels to set the base in this case.
	*/
	-webkit-flex-basis: 200px;
	-ms-flex-basis: 200px;
	flex-basis: 200px;
}


.box-item-article-image img {
	width: 300px;
	height: auto;
	margin-left: 150px;
}


@media (max-width: 30em) {
	/*
		Just as before, we can use media queries to apply different
		styles at specific sizes 
	*/
	.box-item-article-image {
		-webkit-order: 2;
		-ms-order: 2;
		order: 2;
	}
}


.box-item-article-text {
	margin-left: 1em;

	-webkit-flex-grow: 2;
	-ms-flex-grow: 2;
	flex-grow: 2;

	/*
		'flex-shrink' tells the flexbox that it is ok to shrink this
		item when the screen is too small to accomodate it at the
		specified 'grow' size
	*/
	-webkit-flex-shrink: 1;
	-ms-flex-shrink: 1;
	flex-shrink: 1;

	-webkit-flex-basis: 20em;
	-ms-flex-basis: 20em;
	flex-basis: 20em;
}
